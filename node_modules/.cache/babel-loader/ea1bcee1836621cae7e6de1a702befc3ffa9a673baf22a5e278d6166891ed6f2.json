{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HasanAdeeb\\\\Desktop\\\\React\\\\reduxCart\\\\src\\\\components\\\\Cart\\\\Cart.js\",\n  _s = $RefreshSig$();\nimport Card from '../UI/Card';\nimport classes from './Cart.module.css';\nimport CartItem from './CartItem';\nimport { useSelector } from 'react-redux';\nimport { uiActions } from './store/ui-slice';\nimport Notification from './components/UI/Notification';\n\n// ... (previous imports)\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Cart = props => {\n  _s();\n  const dispatch = useDispatch();\n  const cartItems = useSelector(state => state.cart.items);\n  useEffect(() => {\n    const fetchCartData = async () => {\n      dispatch(uiActions.showNotification({\n        status: 'pending',\n        title: 'Fetching..',\n        message: 'Fetching cart data!'\n      }));\n      try {\n        const response = await fetch('https://redux-cart-39854-default-rtdb.firebaseio.com/cart.json');\n        if (!response.ok) {\n          throw new Error('Fetching cart data failed.');\n        }\n        const responseData = await response.json();\n\n        // Dispatch an action to update the Redux store with fetched data\n        // Assuming responseData is the format you want to update the cart state\n        dispatch(cartActions.replaceCart(responseData));\n        dispatch(uiActions.showNotification({\n          status: 'success',\n          title: 'Success..',\n          message: 'Fetched cart data successfully'\n        }));\n      } catch (error) {\n        dispatch(uiActions.showNotification({\n          status: 'error',\n          title: 'Error..',\n          message: 'Fetching cart data failed!'\n        }));\n      }\n    };\n    fetchCartData(); // Fetch data when the component mounts\n  }, [dispatch]);\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: classes.cart,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Your Shopping Cart\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: cartItems.map(item => /*#__PURE__*/_jsxDEV(CartItem, {\n        item: {\n          id: item.id,\n          title: item.name,\n          quantity: item.quantity,\n          total: item.totalPrice,\n          price: item.price\n        }\n      }, item.itemId, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n_s(Cart, \"iZAEEUt7GatJK516rVjwnA3fWpA=\", true, function () {\n  return [useSelector];\n});\n_c = Cart;\nexport default Cart;\n\n// const Cart = (props) => {\n//   const cartItems = useSelector(state => state.cart.items);\n\n//   return (\n//     <Card className={classes.cart}>\n//       <h2>Your Shopping Cart</h2>\n//       <ul>\n//         {cartItems.map((item) => (\n//           <CartItem\n//             key={item.itemId}\n//             item={{ id: item.id, title: item.name, quantity: item.quantity, total: item.totalPrice, price: item.price }}\n//           />\n//         ))}\n//       </ul>\n//     </Card>\n//   );\n// };\n\n// export default Cart;\nvar _c;\n$RefreshReg$(_c, \"Cart\");","map":{"version":3,"names":["Card","classes","CartItem","useSelector","uiActions","Notification","jsxDEV","_jsxDEV","Cart","props","_s","dispatch","useDispatch","cartItems","state","cart","items","useEffect","fetchCartData","showNotification","status","title","message","response","fetch","ok","Error","responseData","json","cartActions","replaceCart","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","item","id","name","quantity","total","totalPrice","price","itemId","_c","$RefreshReg$"],"sources":["C:/Users/HasanAdeeb/Desktop/React/reduxCart/src/components/Cart/Cart.js"],"sourcesContent":["import Card from '../UI/Card';\nimport classes from './Cart.module.css';\nimport CartItem from './CartItem';\nimport { useSelector } from 'react-redux';\nimport { uiActions } from './store/ui-slice';\nimport Notification from './components/UI/Notification';\n\n\n// ... (previous imports)\n\nconst Cart = (props) => {\n  const dispatch = useDispatch();\n  const cartItems = useSelector((state) => state.cart.items);\n\n  useEffect(() => {\n    const fetchCartData = async () => {\n      dispatch(\n        uiActions.showNotification({\n          status: 'pending',\n          title: 'Fetching..',\n          message: 'Fetching cart data!',\n        })\n      );\n\n      try {\n        const response = await fetch(\n          'https://redux-cart-39854-default-rtdb.firebaseio.com/cart.json'\n        );\n\n        if (!response.ok) {\n          throw new Error('Fetching cart data failed.');\n        }\n\n        const responseData = await response.json();\n\n        // Dispatch an action to update the Redux store with fetched data\n        // Assuming responseData is the format you want to update the cart state\n        dispatch(cartActions.replaceCart(responseData));\n\n        dispatch(\n          uiActions.showNotification({\n            status: 'success',\n            title: 'Success..',\n            message: 'Fetched cart data successfully',\n          })\n        );\n      } catch (error) {\n        dispatch(\n          uiActions.showNotification({\n            status: 'error',\n            title: 'Error..',\n            message: 'Fetching cart data failed!',\n          })\n        );\n      }\n    };\n\n    fetchCartData(); // Fetch data when the component mounts\n  }, [dispatch]);\n\n  return (\n    <Card className={classes.cart}>\n      <h2>Your Shopping Cart</h2>\n      <ul>\n        {cartItems.map((item) => (\n          <CartItem\n            key={item.itemId}\n            item={{\n              id: item.id,\n              title: item.name,\n              quantity: item.quantity,\n              total: item.totalPrice,\n              price: item.price,\n            }}\n          />\n        ))}\n      </ul>\n    </Card>\n  );\n};\n\nexport default Cart;\n\n\n// const Cart = (props) => {\n//   const cartItems = useSelector(state => state.cart.items);\n\n//   return (\n//     <Card className={classes.cart}>\n//       <h2>Your Shopping Cart</h2>\n//       <ul>\n//         {cartItems.map((item) => (\n//           <CartItem\n//             key={item.itemId}\n//             item={{ id: item.id, title: item.name, quantity: item.quantity, total: item.totalPrice, price: item.price }}\n//           />\n//         ))}\n//       </ul>\n//     </Card>\n//   );\n// };\n\n// export default Cart;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}